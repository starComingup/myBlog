(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{466:function(t,a,v){"use strict";v.r(a);var _=v(12),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"算法与数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法与数据结构"}},[t._v("#")]),t._v(" 算法与数据结构")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("如何写好程序")]),t._v(" "),v("p",[t._v("程序 = 算法 + 数据结构")])]),t._v(" "),v("p",[t._v("⚠️在作者看来，一个会学计算机的人，脑袋里都应该装着一颗知识树，作者会在该部分以Java为例持续更新，不仅是常用数据结构，一些优秀的算法也会记录。")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Data Structure 在线演示的平台"),v("OutboundLink")],1)]),t._v(" "),v("h2",{attrs:{id:"数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),v("h3",{attrs:{id:"数据结构定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构定义"}},[t._v("#")]),t._v(" 数据结构定义")]),t._v(" "),v("blockquote",[v("p",[t._v("带有结构特性的数据元素的集合                       --摘自百度百科")])]),t._v(" "),v("h3",{attrs:{id:"常用的数据结构与算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用的数据结构与算法"}},[t._v("#")]),t._v(" 常用的数据结构与算法")]),t._v(" "),v("h4",{attrs:{id:"线性表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线性表"}},[t._v("#")]),t._v(" "),v("RouterLink",{attrs:{to:"/algorithm/linear-table.html"}},[t._v("线性表")])],1),t._v(" "),v("ul",[v("li",[t._v("数组      顺序存储")]),t._v(" "),v("li",[t._v("链表      链式存储")])]),t._v(" "),v("h4",{attrs:{id:"栈与队列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#栈与队列"}},[t._v("#")]),t._v(" "),v("RouterLink",{attrs:{to:"/algorithm/stack&quene.html"}},[t._v("栈与队列")])],1),t._v(" "),v("ul",[v("li",[v("p",[t._v("栈")]),t._v(" "),v("p",[t._v("顺序存储、链式存储")])]),t._v(" "),v("li",[v("p",[t._v("队列")]),t._v(" "),v("p",[t._v("顺序存储、链式存储")])])]),t._v(" "),v("h4",{attrs:{id:"树与图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#树与图"}},[t._v("#")]),t._v(" 树与图")]),t._v(" "),v("ul",[v("li",[v("p",[v("RouterLink",{attrs:{to:"/algorithm/Tree.html"}},[t._v("树")])],1),t._v(" "),v("p",[t._v("二叉查找树（BST）、二叉平衡树（自平衡二叉查找树（AVL），红黑树（red-black），B树，B+树（MySQL索引）,伸展树（Splay)）")]),t._v(" "),v("p",[t._v("哈夫曼树")])]),t._v(" "),v("li",[v("p",[v("RouterLink",{attrs:{to:"/algorithm/Map.html"}},[t._v("图")])],1),t._v(" "),v("p",[t._v("邻接矩阵，邻接表，邻接多重表（无向图）")])])]),t._v(" "),v("h4",{attrs:{id:"其他"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),v("ul",[v("li",[v("p",[v("RouterLink",{attrs:{to:"/algorithm/Heap.html"}},[t._v("堆")])],1)]),t._v(" "),v("li",[v("p",[v("RouterLink",{attrs:{to:"/algorithm/Hash.html"}},[t._v("散列表")]),t._v(" Hash")],1)])]),t._v(" "),v("h2",{attrs:{id:"算法思想及其应用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法思想及其应用"}},[t._v("#")]),t._v(" 算法思想及其应用")]),t._v(" "),v("h3",{attrs:{id:"时间复杂度概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度概念"}},[t._v("#")]),t._v(" 时间复杂度概念")]),t._v(" "),v("blockquote",[v("p",[t._v("一个函数，它定性描述该算法的运行时间           --百度百科")])]),t._v(" "),v("h3",{attrs:{id:"算法思想及实际应用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法思想及实际应用"}},[t._v("#")]),t._v(" 算法思想及实际应用")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("暴力 一切皆可暴力")])]),t._v(" "),v("li",[v("p",[v("RouterLink",{attrs:{to:"/algorithm/Sort.html"}},[t._v("排序")])],1),t._v(" "),v("p",[t._v("冒泡，快排，希尔，堆，外部，选择，二路归并，基数，插入（直接，折半）")]),t._v(" "),v("p",[t._v("手撕JDK Arrays.sort()")])]),t._v(" "),v("li",[v("p",[t._v("贪心 "),v("em",[t._v("非2021考纲")])]),t._v(" "),v("p",[t._v("贪心策略，最优子结构")]),t._v(" "),v("p",[t._v("应用：背包问题，活动时间（课表），线段覆盖，找零钱")])]),t._v(" "),v("li",[v("p",[v("RouterLink",{attrs:{to:"/algorithm/Find.html"}},[t._v("查找")])],1),t._v(" "),v("p",[t._v("有序数组二分查找，二叉查找树，顺序查找，分块查找，折半查找，Hash表")]),t._v(" "),v("p",[v("RouterLink",{attrs:{to:"/Java/HashMap.html"}},[t._v("手撕JDK HashMap与ConcurrentHashMap")])],1),t._v(" "),v("p",[t._v("应用：并查集，求开方，大于给定元素的最小元素")])]),t._v(" "),v("li",[v("p",[t._v("分治 "),v("em",[t._v("非2021考纲")])]),t._v(" "),v("p",[t._v("问题规模大与相同子问题")]),t._v(" "),v("p",[t._v("应用：MapReduce，大整数乘法，快排，归并排序")])]),t._v(" "),v("li",[v("p",[t._v("搜索")]),t._v(" "),v("p",[t._v("最小生成树，关键路径，拓扑排序")]),t._v(" "),v("p",[t._v("应用：好友关系，N皇后，数独")])]),t._v(" "),v("li",[v("p",[t._v("动态规划")]),t._v(" "),v("p",[t._v("子问题重叠，无后效，最优化原理")]),t._v(" "),v("p",[t._v("应用：最短路径")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);